{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/card\";\nimport * as i2 from \"@angular/material/input\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor() {\n    this.username = '';\n    this.password = '';\n  }\n  onSubmit() {\n    // Implement your authentication logic here\n    if (this.username === 'yourUsername' && this.password === 'yourPassword') {\n      // Authentication successful, navigate to a different page or perform other actions.\n      console.log('Authentication successful');\n    } else {\n      // Authentication failed, display an error message or take appropriate action.\n      console.error('Authentication failed');\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 12,\n    vars: 2,\n    consts: [[1, \"login-card\"], [3, \"ngSubmit\"], [1, \"full-width\"], [\"matInput\", \"\", \"placeholder\", \"Username\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-header\")(2, \"mat-card-title\");\n        i0.ɵɵtext(3, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"mat-card-content\")(5, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(6, \"mat-form-field\", 2)(7, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"mat-form-field\", 2)(9, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"button\", 5);\n        i0.ɵɵtext(11, \"Login\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n      }\n    },\n    dependencies: [i1.MatCard, i1.MatCardContent, i1.MatCardHeader, i1.MatCardTitle, i2.MatInput, i3.MatFormField, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","username","password","onSubmit","console","log","error","_","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_5_listener","LoginComponent_Template_input_ngModelChange_7_listener","$event","LoginComponent_Template_input_ngModelChange_9_listener","ɵɵadvance","ɵɵproperty"],"sources":["/Users/dev/Desktop/ARA-Assessment/FE/src/app/authentication/login/login.component.ts","/Users/dev/Desktop/ARA-Assessment/FE/src/app/authentication/login/login.component.html"],"sourcesContent":["import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  username: string = '';\n  password: string = '';\n\n  onSubmit() {\n    // Implement your authentication logic here\n    if (this.username === 'yourUsername' && this.password === 'yourPassword') {\n      // Authentication successful, navigate to a different page or perform other actions.\n      console.log('Authentication successful');\n    } else {\n      // Authentication failed, display an error message or take appropriate action.\n      console.error('Authentication failed');\n    }\n  }\n}\n","<mat-card class=\"login-card\">\n  <mat-card-header>\n    <mat-card-title>Login</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <form (ngSubmit)=\"onSubmit()\">\n      <mat-form-field class=\"full-width\">\n        <input matInput placeholder=\"Username\" [(ngModel)]=\"username\" name=\"username\" required>\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width\">\n        <input matInput type=\"password\" placeholder=\"Password\" [(ngModel)]=\"password\" name=\"password\" required>\n      </mat-form-field>\n\n      <button mat-raised-button color=\"primary\" type=\"submit\">Login</button>\n    </form>\n  </mat-card-content>\n</mat-card>\n"],"mappings":";;;;;AAOA,OAAM,MAAOA,cAAc;EAL3BC,YAAA;IAME,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;;EAErBC,QAAQA,CAAA;IACN;IACA,IAAI,IAAI,CAACF,QAAQ,KAAK,cAAc,IAAI,IAAI,CAACC,QAAQ,KAAK,cAAc,EAAE;MACxE;MACAE,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;KACzC,MAAM;MACL;MACAD,OAAO,CAACE,KAAK,CAAC,uBAAuB,CAAC;;EAE1C;EAAC,QAAAC,CAAA,G;qBAbUR,cAAc;EAAA;EAAA,QAAAS,EAAA,G;UAAdT,cAAc;IAAAU,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP3BE,EAAA,CAAAC,cAAA,kBAA6B;QAETD,EAAA,CAAAE,MAAA,YAAK;QAAAF,EAAA,CAAAG,YAAA,EAAiB;QAExCH,EAAA,CAAAC,cAAA,uBAAkB;QACVD,EAAA,CAAAI,UAAA,sBAAAC,iDAAA;UAAA,OAAYN,GAAA,CAAAb,QAAA,EAAU;QAAA,EAAC;QAC3Bc,EAAA,CAAAC,cAAA,wBAAmC;QACMD,EAAA,CAAAI,UAAA,2BAAAE,uDAAAC,MAAA;UAAA,OAAAR,GAAA,CAAAf,QAAA,GAAAuB,MAAA;QAAA,EAAsB;QAA7DP,EAAA,CAAAG,YAAA,EAAuF;QAGzFH,EAAA,CAAAC,cAAA,wBAAmC;QACsBD,EAAA,CAAAI,UAAA,2BAAAI,uDAAAD,MAAA;UAAA,OAAAR,GAAA,CAAAd,QAAA,GAAAsB,MAAA;QAAA,EAAsB;QAA7EP,EAAA,CAAAG,YAAA,EAAuG;QAGzGH,EAAA,CAAAC,cAAA,iBAAwD;QAAAD,EAAA,CAAAE,MAAA,aAAK;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QAP7BH,EAAA,CAAAS,SAAA,GAAsB;QAAtBT,EAAA,CAAAU,UAAA,YAAAX,GAAA,CAAAf,QAAA,CAAsB;QAINgB,EAAA,CAAAS,SAAA,GAAsB;QAAtBT,EAAA,CAAAU,UAAA,YAAAX,GAAA,CAAAd,QAAA,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}